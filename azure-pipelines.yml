# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- noXamarin

variables:
- group: AndroidSigning

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    echo apksignerKeystoreFile: '$(keystore.secureFilePath)'
    echo apksignerKeystorePassword: '$(keystorePassword)'
    echo apksignerKeystoreAlias: '$(keystoreAlias)'
  displayName: 'Check vars and echo'

- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: UseDotNet@2
  displayName: Switch .NET Core version
  inputs:
    version: 8.x

- task: NuGetCommand@2
  inputs:
      feedsToUse: config
      restoreSolution: '**/*.sln'
      noCache: true
  displayName: 'NuGet restore'

- script: |
    ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platform-tools"
    ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platforms;android-34"
  displayName: install sdks

- script: |
    ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --list_installed
  displayName: 'check the installed'

- script: |
    dotnet workload install android
    dotnet workload list
  displayName: 'install workloads'
  
- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    projects: '**/DroidUpc2.csproj'
    arguments: '-c Debug -f net8.0-android'


- task: AndroidSigning@3
  displayName: 'Sign APK'
  inputs:
    apkFiles: '**/*.apk'
    apksignerKeystoreFile: 'RL.keystore'
    apksignerKeystorePassword: $(keystorePassword)
    apksignerKeystoreAlias: $(keystoreAlias)
    apksignerArguments: '-verbose'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Pipeline.Workspace)'
    Contents: '**/*.apk'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/artifacts'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/artifacts'
    artifact: 'signed_apk'
    publishLocation: 'pipeline'